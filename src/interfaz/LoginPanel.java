/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import excepciones.ExcepcionUsuario;
import utilidades.MensajeSimple;
import java.awt.Font;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JProgressBar;
import sistematransaccional.Usuario;

/**
 *
 * @author Santiago
 */
public class LoginPanel extends javax.swing.JPanel {

    JProgressBar barraProgreso;
    FramePrincipal framePrincipalParent;
    Font font;

    /**
     * Creates new form loginPanel
     *
     * @param font
     * @param barraProgreso
     * @param framePrincipalParent
     */
    public LoginPanel(Font font, JProgressBar barraProgreso, FramePrincipal framePrincipalParent) {
        initComponents();

        //poner fuentes personalizadas
        this.barraProgreso = barraProgreso;
        this.framePrincipalParent = framePrincipalParent;
        this.font = font;
        logo.setFont(font.deriveFont(38f));
        usuario.setFont(font.deriveFont(20f));
        clave.setFont(font.deriveFont(20f));
        ingresarBoton.setFont(font.deriveFont(20f));
        usuarioInput.setFont(font.deriveFont(20f));

        /* agregar linea debajo de los botones cada vez que el mouse esta encima*/
        for (JButton jb : new JButton[]{ingresarBoton}) {
            jb.setBorder(javax.swing.BorderFactory.createEmptyBorder());
            jb.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    jb.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 51, 51)));
                }

                @Override
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    jb.setBorder(javax.swing.BorderFactory.createEmptyBorder());

                }
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        usuario = new javax.swing.JLabel();
        clave = new javax.swing.JLabel();
        ingresarBoton = new javax.swing.JButton();
        usuarioInput = new javax.swing.JTextField();
        claveInput = new javax.swing.JPasswordField();
        logo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        usuario.setText("Usuario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 50, 50);
        jPanel1.add(usuario, gridBagConstraints);

        clave.setText("Clave");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 50, 50);
        jPanel1.add(clave, gridBagConstraints);

        ingresarBoton.setText("Ingresar");
        ingresarBoton.setContentAreaFilled(false);
        ingresarBoton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ingresarBotonMouseEntered(evt);
            }
        });
        ingresarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBotonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        jPanel1.add(ingresarBoton, gridBagConstraints);

        usuarioInput.setForeground(new java.awt.Color(102, 102, 102));
        usuarioInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usuarioInput.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        usuarioInput.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        usuarioInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioInputActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 50, 50);
        jPanel1.add(usuarioInput, gridBagConstraints);

        claveInput.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        claveInput.setForeground(new java.awt.Color(153, 153, 153));
        claveInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        claveInput.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        claveInput.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 50, 50);
        jPanel1.add(claveInput, gridBagConstraints);

        logo.setBackground(new java.awt.Color(255, 255, 255));
        logo.setFont(new java.awt.Font("Arial", 0, 38)); // NOI18N
        logo.setForeground(new java.awt.Color(255, 51, 51));
        logo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logo.setText("Sistema Contable Personal");
        logo.setToolTipText("");
        logo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        logo.setMinimumSize(new java.awt.Dimension(100, 100));
        logo.setName(""); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        jPanel1.add(logo, gridBagConstraints);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void ingresarBotonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingresarBotonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresarBotonMouseEntered

    private void usuarioInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioInputActionPerformed

    private void ingresarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBotonActionPerformed
        // AL INTERACTUAR CON EL BOTON DE INGRESAR
        ingresar();
    }//GEN-LAST:event_ingresarBotonActionPerformed
    /**
     * Es de gran importancia esta funcion, lo que hace es enviar el usuario y
     * clave al servidor de la Base De Datos, hace las verificaciones
     * pertinentes y en caso de que el usuario y clave correspondan a un usuario
     * en la BD, Hace las consultas corresponDientes para generar un objeto
     * Usuario y pasarselo al MenuPanel, haciendo el inicio de sesi√≥n
     * IMPORTANTE: Todo esto se hace en un Thread Aparte, mientras esto ocurre
     * se bloquean los botones y campos de texto
     */
    private void ingresar() {

        /*/Verificar que se haya ingresado usuario y Clave*/
        String nombreUsuario = usuarioInput.getText();
        String claveUsuario = new String(claveInput.getPassword());
        if (!nombreUsuario.trim().isEmpty() && !claveUsuario.trim().isEmpty()) {
            /*/Conectar a base de datos*/
            // <editor-fold defaultstate="collapsed" desc="Conectar a base de datos">     
            barraProgreso.setVisible(true);
            barraProgreso.setValue(25);
            for (JComponent jc : new JComponent[]{ingresarBoton, usuarioInput, claveInput}) {
                jc.setEnabled(false);
            }
            java.awt.EventQueue.invokeLater(() -> {
                try {
                    framePrincipalParent.getBaseDeDatos().conectar();
                    if (framePrincipalParent.getBaseDeDatos().estaConectada()) {
                        /*Realizar Login, enviar usuario y clave a la base de datos*/
                        try {
                            PreparedStatement statement = framePrincipalParent.getBaseDeDatos().getConexion().prepareStatement(
                                    "SELECT * FROM usuarios WHERE usuario = ? AND clave = ?");
                            barraProgreso.setValue(35);
                            statement.setString(1, nombreUsuario);
                            statement.setString(2, encryptPassword(claveUsuario));
                            System.out.println(encryptPassword(claveUsuario));
                            ResultSet rs = statement.executeQuery();
                            barraProgreso.setValue(65);
                            if (!rs.isBeforeFirst()) {
                                MensajeSimple.mostrar("El usuario y contrase√±a ingresados son incorrectos.");
                            } else {
                                /*Ingreso exitoso*/
                                rs.next();
                                /*Se crea el objeto USUARIO traido desde la BD que va a manejar los datos de nuestro Software*/
                                Usuario usuarioBD = Usuario.crearDesdeBaseDeDatos(framePrincipalParent.getBaseDeDatos(), rs.getInt("id"));
                                /*Se pasa el usuario creado al objeto MenuPanel para que cargue su informaci√≥n*/
                                framePrincipalParent.getMenuPanel().setUsuarioActivo(usuarioBD);
                                /*Le indicamos al JFrame que cambie del panel Login, Al panel de Menu*/
                                framePrincipalParent.cambiarMenu(FramePrincipal.MENU_PANEL);
                                /*Se habilitan de nuevo los botones y campos de textos*/
                                for (JComponent jc : new JComponent[]{ingresarBoton, usuarioInput, claveInput}) {
                                    jc.setEnabled(true);
                                }
                                usuarioInput.setText("");
                                claveInput.setText("");
                                barraProgreso.setValue(99);
                                /**
                                 * Nota: Despues de estos procesos este
                                 * LoginPanel queda existiendo en memoria pero
                                 * ya no es visible, Puede volver a ser visible,
                                 * cuando el usuario desde el MenuPanel cierre
                                 * la sesi√≥n.
                                 */
                            }
                        } catch (UnsupportedEncodingException | NoSuchAlgorithmException | SQLException ex) {
                            MensajeSimple.mostrar("Ha fallado la conexi√≥n a la base de datos\n" + ex.getLocalizedMessage());
                        } catch (ExcepcionUsuario ex) {
                            MensajeSimple.mostrar("El usuario a consultar no existe, error de base de datos\n" + ex.getLocalizedMessage());
                        }
                    } else {
                        MensajeSimple.mostrar("Ha fallado la conexi√≥n a la base de datos");
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    MensajeSimple.mostrar("Ha fallado la conexi√≥n a la base de datos\n" + ex.getLocalizedMessage());
                } finally {
                    barraProgreso.setValue(0);
                    for (JComponent jc : new JComponent[]{ingresarBoton, usuarioInput, claveInput}) {
                        jc.setEnabled(true);
                    }
                    barraProgreso.setVisible(false);
                }
            }); // </editor-fold>  

        } else {
            MensajeSimple.mostrar("Porfavor, Ingresa Usuario y contrase√±a para loguearte");
        }
    }

    //Algoritmo para encriptar contrase√±a para poder enviarla a la Base de Datos
    private static String encryptPassword(String password) throws NoSuchAlgorithmException, UnsupportedEncodingException {

        MessageDigest crypt = MessageDigest.getInstance("SHA-1");
        crypt.reset();
        crypt.update(password.getBytes("UTF-8"));

        return new BigInteger(1, crypt.digest()).toString(16);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel clave;
    private javax.swing.JPasswordField claveInput;
    private javax.swing.JButton ingresarBoton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel usuario;
    private javax.swing.JTextField usuarioInput;
    // End of variables declaration//GEN-END:variables
}
